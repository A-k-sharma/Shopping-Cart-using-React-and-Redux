{"ast":null,"code":"import _objectSpread from \"/home/ttn/Documents/shopping-cart-using-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/ttn/Documents/shopping-cart-using-redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { ADD_TO_CART, REMOVE_ITEM, ADD_QUANTITY, SUB_QUANTITY } from '../actions/cartActions';\nimport products from '../../data';\nvar initialState = {\n  items: _toConsumableArray(products),\n  addItems: [],\n  total: 0\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === ADD_TO_CART) {\n    var addedItem = state.items.find(function (item) {\n      return item.id === action.id;\n    }); //check if the action id exists in the addedItems\n\n    var existed_item = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return _objectSpread({}, state, {\n        total: state.total + addedItem.price\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      var newTotal = state.total + addedItem.price;\n      return _objectSpread({}, state, {\n        addedItems: [].concat(_toConsumableArray(state.addedItems), [addedItem]),\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    var itemToRemove = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n    var new_items = state.addedItems.filter(function (item) {\n      return action.id !== item.id;\n    }); //calculating the total\n\n    var _newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n\n    console.log(itemToRemove);\n    return _objectSpread({}, state, {\n      addedItems: new_items,\n      total: _newTotal\n    });\n  } //INSIDE CART COMPONENT\n\n\n  if (action.type === ADD_QUANTITY) {\n    var _addedItem = state.items.find(function (item) {\n      return item.id === action.id;\n    });\n\n    _addedItem.quantity += 1;\n\n    var _newTotal2 = state.total + _addedItem.price;\n\n    return _objectSpread({}, state, {\n      total: _newTotal2\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    var _addedItem2 = state.items.find(function (item) {\n      return item.id === action.id;\n    }); //if the qt == 0 then it should be removed\n\n\n    if (_addedItem2.quantity === 1) {\n      var _new_items = state.addedItems.filter(function (item) {\n        return item.id !== action.id;\n      });\n\n      var _newTotal3 = state.total - _addedItem2.price;\n\n      return _objectSpread({}, state, {\n        addedItems: _new_items,\n        total: _newTotal3\n      });\n    } else {\n      _addedItem2.quantity -= 1;\n\n      var _newTotal4 = state.total - _addedItem2.price;\n\n      return _objectSpread({}, state, {\n        total: _newTotal4\n      });\n    }\n  }\n\n  return state;\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/ttn/Documents/shopping-cart-using-redux/src/Components/reducers/cartReducer.js"],"names":["ADD_TO_CART","REMOVE_ITEM","ADD_QUANTITY","SUB_QUANTITY","products","initialState","items","addItems","total","cartReducer","state","action","type","addedItem","find","item","id","existed_item","addedItems","quantity","price","newTotal","itemToRemove","new_items","filter","console","log"],"mappings":"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","sourcesContent":["import {ADD_TO_CART,REMOVE_ITEM,ADD_QUANTITY,SUB_QUANTITY} from '../actions/cartActions';\nimport products from '../../data';\n\nconst initialState = {\n        items:[...products],\n      addItems:[],\n      total:0\n}\n\nconst cartReducer = (state=initialState,action) =>\n{\n    if(action.type === ADD_TO_CART){\n        let addedItem = state.items.find(item=> item.id === action.id)\n        //check if the action id exists in the addedItems\n        let existed_item= state.addedItems.find(item=> action.id === item.id)\n        if(existed_item)\n        {\n            addedItem.quantity += 1\n            return{\n                ...state,\n                total: state.total + addedItem.price\n            }\n        }\n        else{\n            addedItem.quantity = 1;\n            //calculating the total\n            let newTotal = state.total + addedItem.price\n\n            return{\n                ...state,\n                addedItems: [...state.addedItems, addedItem],\n                total : newTotal\n            }\n\n        }\n    }\n    if(action.type === REMOVE_ITEM){\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\n\n        //calculating the total\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\n        console.log(itemToRemove)\n        return{\n            ...state,\n            addedItems: new_items,\n            total: newTotal\n        }\n    }\n    //INSIDE CART COMPONENT\n    if(action.type=== ADD_QUANTITY){\n        let addedItem = state.items.find(item=> item.id === action.id)\n        addedItem.quantity += 1\n        let newTotal = state.total + addedItem.price\n        return{\n            ...state,\n            total: newTotal\n        }\n    }\n    if(action.type=== SUB_QUANTITY){\n        let addedItem = state.items.find(item=> item.id === action.id)\n        //if the qt == 0 then it should be removed\n        if(addedItem.quantity === 1){\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\n            let newTotal = state.total - addedItem.price\n            return{\n                ...state,\n                addedItems: new_items,\n                total: newTotal\n            }\n        }\n        else {\n            addedItem.quantity -= 1\n            let newTotal = state.total - addedItem.price\n            return{\n                ...state,\n                total: newTotal\n            }\n        }\n\n    }\n    return state\n}\n\nexport default cartReducer\n"]},"metadata":{},"sourceType":"module"}