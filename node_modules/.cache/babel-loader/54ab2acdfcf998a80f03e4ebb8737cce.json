{"ast":null,"code":"import _objectSpread from \"/home/ttn/Documents/shopping-cart-using-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/ttn/Documents/shopping-cart-using-redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport products from \"../../data\";\nimport { ADD_TO_CART } from \"../action/cartAction\";\nvar initstate = {\n  items: products,\n  addedItems: [],\n  total: 0\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initstate;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      {\n        //console.log(addedItem)\n        var index = state.addedItems.findIndex(function (item) {\n          return action.id === item.id;\n        });\n\n        var _products = _toConsumableArray(state.items);\n\n        var prodIndex = _products.findIndex(function (item) {\n          return action.id === item.id;\n        });\n\n        _products[prodIndex].quantity -= 1;\n\n        if (index !== -1) {\n          var addedItemList = _toConsumableArray(state.addedItems);\n\n          var addedItem = addedItemList[index];\n          addedItem.quantity += 1;\n          return _objectSpread({}, state, {\n            items: _products,\n            addedItems: addedItemList,\n            total: state.total + addedItem.price\n          });\n        } else {\n          var newItemIndex = state.items.findIndex(function (item) {\n            return item.id === action.id;\n          });\n\n          if (newItemIndex !== -1) {\n            var newItem = _objectSpread({}, state.items[newItemIndex]);\n\n            newItem.quantity = 1;\n            return _objectSpread({}, state, {\n              items: _products,\n              addedItems: [].concat(_toConsumableArray(state.addedItems), [newItem]),\n              total: state.total + newItem.price\n            });\n          }\n\n          return _objectSpread({}, state);\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/ttn/Documents/shopping-cart-using-redux/src/components/reducer/cartReducer.js"],"names":["products","ADD_TO_CART","initstate","items","addedItems","total","cartReducer","state","action","type","index","findIndex","item","id","prodIndex","quantity","addedItemList","addedItem","price","newItemIndex","newItem"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,IAAMC,SAAS,GAAC;AACZC,EAAAA,KAAK,EAACH,QADM;AAEZI,EAAAA,UAAU,EAAC,EAFC;AAGZC,EAAAA,KAAK,EAAC;AAHM,CAAhB;;AAMA,IAAMC,WAAW,GAAC,SAAZA,WAAY,GAA0B;AAAA,MAAzBC,KAAyB,uEAAnBL,SAAmB;AAAA,MAATM,MAAS;;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AAAoB;AAChB;AACA,YAAIC,KAAK,GAAGH,KAAK,CAACH,UAAN,CAAiBO,SAAjB,CAA2B,UAAAC,IAAI;AAAA,iBAAIJ,MAAM,CAACK,EAAP,KAAcD,IAAI,CAACC,EAAvB;AAAA,SAA/B,CAAZ;;AACA,YAAMb,SAAQ,sBAAOO,KAAK,CAACJ,KAAb,CAAd;;AACA,YAAMW,SAAS,GAAGd,SAAQ,CAACW,SAAT,CAAmB,UAAAC,IAAI;AAAA,iBAAIJ,MAAM,CAACK,EAAP,KAAcD,IAAI,CAACC,EAAvB;AAAA,SAAvB,CAAlB;;AACAb,QAAAA,SAAQ,CAACc,SAAD,CAAR,CAAoBC,QAApB,IAAgC,CAAhC;;AACA,YAAIL,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,cAAMM,aAAa,sBAAOT,KAAK,CAACH,UAAb,CAAnB;;AACA,cAAMa,SAAS,GAAGD,aAAa,CAACN,KAAD,CAA/B;AACAO,UAAAA,SAAS,CAACF,QAAV,IAAsB,CAAtB;AACA,mCACOR,KADP;AAEIJ,YAAAA,KAAK,EAAEH,SAFX;AAGII,YAAAA,UAAU,EAAEY,aAHhB;AAIIX,YAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcY,SAAS,CAACC;AAJnC;AAMH,SAVD,MAUO;AACH,cAAIC,YAAY,GAAGZ,KAAK,CAACJ,KAAN,CAAYQ,SAAZ,CAAsB,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EAAvB;AAAA,WAA1B,CAAnB;;AACA,cAAIM,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrB,gBAAIC,OAAO,qBAAQb,KAAK,CAACJ,KAAN,CAAYgB,YAAZ,CAAR,CAAX;;AACAC,YAAAA,OAAO,CAACL,QAAR,GAAmB,CAAnB;AACA,qCACOR,KADP;AAEIJ,cAAAA,KAAK,EAAEH,SAFX;AAGII,cAAAA,UAAU,+BAAMG,KAAK,CAACH,UAAZ,IAAwBgB,OAAxB,EAHd;AAIIf,cAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAce,OAAO,CAACF;AAJjC;AAMH;;AACD,mCACOX,KADP;AAGH;AACJ;;AAGD;AAAS,aAAOA,KAAP;AApCb;AAuCH,CAxCD;;AA0CA,eAAeD,WAAf","sourcesContent":["import products from \"../../data\";\nimport { ADD_TO_CART } from \"../action/cartAction\"\n\nconst initstate={\n    items:products,\n    addedItems:[],\n    total:0\n}\n\nconst cartReducer=(state=initstate,action)=>{\n    switch (action.type) {\n        case \"ADD_TO_CART\": {\n            //console.log(addedItem)\n            let index = state.addedItems.findIndex(item => action.id === item.id);\n            const products = [...state.items];\n            const prodIndex = products.findIndex(item => action.id === item.id);\n            products[prodIndex].quantity -= 1;\n            if (index !== -1) {\n                const addedItemList = [...state.addedItems];\n                const addedItem = addedItemList[index];\n                addedItem.quantity += 1;\n                return {\n                    ...state,\n                    items: products,\n                    addedItems: addedItemList,\n                    total: state.total + addedItem.price\n                };\n            } else {\n                let newItemIndex = state.items.findIndex(item => item.id === action.id);\n                if (newItemIndex !== -1) {\n                    let newItem = { ...state.items[newItemIndex] };\n                    newItem.quantity = 1;\n                    return {\n                        ...state,\n                        items: products,\n                        addedItems: [...state.addedItems, newItem],\n                        total: state.total + newItem.price\n                    };\n                }\n                return {\n                    ...state\n                };\n            }\n        }\n        \n\n        default: return state;\n\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}